package com.mycompany.chatboxv1;


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hii
 */
public class MassengerWindow extends javax.swing.JFrame {
        
        public static String Username=null;
        public static BroadcastServer bs;
        public static MassegeSocket ms;
        public static MassengerWindow frame;
	private JPanel contentPane;
        public static GroupServer gs=null;
        public static MultiCreate mcs;
        public static int f=0;
        
        //receiver thread for a connection
	
        //checking thread for name
        static Thread name = new Thread(new Runnable(){
            public void run(){
                while(Username==null || Username.equals("")){
                    Username=JOptionPane.showInputDialog(frame,new Label("Enter Username for the current session"));
                }
            }
        });
    
        
    public MassengerWindow() {
        initComponents();
        DefaultCaret caret1 = (DefaultCaret) lltxtp.getCaret();
        caret1.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        DefaultCaret caret2 = (DefaultCaret) rrtxtp.getCaret();
        caret2.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        connecttobtn = new javax.swing.JButton();
        createbtn = new javax.swing.JButton();
        groupbtn = new javax.swing.JButton();
        multibtn = new javax.swing.JButton();
        multibtn2 = new javax.swing.JButton();
        broadbtn = new javax.swing.JButton();
        closebtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgtxtarea = new javax.swing.JTextArea();
        sendbtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        conlabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lltxtp = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        rrtxtp = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));

        connecttobtn.setText("Connect To");
        connecttobtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                connecttobtnMouseEntered(evt);
            }
        });
        connecttobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connecttobtnActionPerformed(evt);
            }
        });
        jPanel1.add(connecttobtn);

        createbtn.setText("Create Server");
        createbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                createbtnMouseEntered(evt);
            }
        });
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });
        jPanel1.add(createbtn);

        groupbtn.setText("Create Group Server");
        groupbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                groupbtnMouseEntered(evt);
            }
        });
        groupbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupbtnActionPerformed(evt);
            }
        });
        jPanel1.add(groupbtn);

        multibtn.setText("Create Group");
        multibtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                multibtnMouseEntered(evt);
            }
        });
        multibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multibtnActionPerformed(evt);
            }
        });
        jPanel1.add(multibtn);

        multibtn2.setText("Join Group");
        multibtn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                multibtn2MouseEntered(evt);
            }
        });
        multibtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multibtn2ActionPerformed(evt);
            }
        });
        jPanel1.add(multibtn2);

        broadbtn.setText("Create Broadcast");
        broadbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                broadbtnMouseEntered(evt);
            }
        });
        broadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                broadbtnActionPerformed(evt);
            }
        });
        jPanel1.add(broadbtn);

        closebtn.setText("x");
        closebtn.setToolTipText("Close connection");
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closebtnMouseEntered(evt);
            }
        });
        closebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebtnActionPerformed(evt);
            }
        });
        jPanel1.add(closebtn);

        jPanel3.setBackground(new java.awt.Color(51, 255, 51));

        msgtxtarea.setBackground(new java.awt.Color(204, 255, 204));
        msgtxtarea.setColumns(20);
        msgtxtarea.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        msgtxtarea.setRows(5);
        jScrollPane1.setViewportView(msgtxtarea);

        sendbtn.setBackground(new java.awt.Color(204, 255, 204));
        sendbtn.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sendbtn.setText("Send>");
        sendbtn.setEnabled(false);
        sendbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sendbtnMouseEntered(evt);
            }
        });
        sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sendbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));

        conlabel.setBackground(new java.awt.Color(255, 102, 102));
        conlabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        conlabel.setForeground(new java.awt.Color(255, 0, 0));
        conlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lltxtp.setEditable(false);
        lltxtp.setBackground(new java.awt.Color(204, 204, 255));
        lltxtp.setColumns(20);
        lltxtp.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        lltxtp.setRows(5);
        jScrollPane3.setViewportView(lltxtp);

        rrtxtp.setEditable(false);
        rrtxtp.setBackground(new java.awt.Color(204, 255, 204));
        rrtxtp.setColumns(20);
        rrtxtp.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        rrtxtp.setRows(5);
        jScrollPane5.setViewportView(rrtxtp);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(conlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(conlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)))
        );

        jPanel2.setBackground(new java.awt.Color(51, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ChatBox");

        jLabel4.setIcon(new javax.swing.ImageIcon("H:\\NetBeans\\data\\newicons\\longimage08.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
        //create server code
        String pr  = JOptionPane.showInputDialog(new Label("Enter Port No. for server. "));
        int port;
        port =Integer.parseInt(pr);
        try {
            int uniqueId = (int) System.currentTimeMillis();
            String commandName = ""; 
            ActionEvent event = new ActionEvent(this, uniqueId, commandName);
            closebtnActionPerformed(event);
            conlabel.setText("Server listening... : "+port);
            ms = new MassegeSocket(frame,port);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(frame, new Label("Server Creation Failed"));
            Logger.getLogger(MassengerWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createbtnActionPerformed

    private void broadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_broadbtnActionPerformed
        // TODO add your handling code here:
        //broadbtn
                        String pr  = JOptionPane.showInputDialog(new Label("Enter Port No. for server. "));
                        int port;
                        port =Integer.parseInt(pr);
                        try {
                            conlabel.setText("<BroadcastServer Created:"+port+">");
                            sendbtn.setEnabled(true);
                            int uniqueId = (int) System.currentTimeMillis();
                            String commandName = ""; 
                            ActionEvent event = new ActionEvent(this, uniqueId, commandName);
                            closebtnActionPerformed(event);
                            bs = new BroadcastServer(frame,port);
                            f=2;
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(frame, new Label("Server Creation Failed"));
                            Logger.getLogger(MassengerWindow.class.getName()).log(Level.SEVERE, null, ex);
                        }
    }//GEN-LAST:event_broadbtnActionPerformed

    private void connecttobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connecttobtnActionPerformed
        // TODO add your handling code here:
        //connect to action
        ConnectionDial.getInstance(frame);
    }//GEN-LAST:event_connecttobtnActionPerformed

    private void sendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbtnActionPerformed
        // TODO add your handling code here:
                    String s = msgtxtarea.getText();
                    s=Username+": "+s;
                    if(f==3)
                        mcs.send(s);
                    else if(f==2)
                        bs.send(s);
                    else if(f==1)
                        gs.send(s);
                    else{
                        if(s!="" && s!=null) {
                                try {
                                        int mleninchat=(int)(jPanel4.getWidth()*2.48*6/(7*2*25))-8;
                                        MassegeSocket.dos.writeBytes(s+"\n");
                                        msgtxtarea.setText("");
                                        //formatting msgtxt
                                        String ss="";
                                        if(s.length()>mleninchat)
                                        {	
                                                int l=(int)(s.length()/mleninchat);
                                                int nind=0;
                                                for(int i=1;i<=l;i++) {
                                                        ss=ss+s.substring(nind,nind+mleninchat)+"\n";
                                                        nind=nind+mleninchat;
                                                }
                                                ss=ss+s.substring(nind);
                                        }
                                        else
                                                ss=s;
                                        rrtxtpappend(ss+"\n");

                                        //move left position
                                        String rs="";
                                        for(int i=0;i<ss.length();i++)
                                                rs=rs+" ";

                                        ss="";
                                        if(rs.length()>mleninchat)
                                        {	
                                                int l=(int)(rs.length()/mleninchat);
                                                int nind=0;
                                                for(int i=1;i<=l;i++) {
                                                        ss=ss+rs.substring(nind,nind+mleninchat)+"\n";
                                                        nind=nind+mleninchat;
                                                }
                                                ss=ss+rs.substring(nind);
                                        }
                                        else
                                                ss=rs;

                                        lltxtp.append(ss+"\n");
                                } catch (SocketException e) {
                                        showPop();
                                        sendbtn.setEnabled(false);
                                        conlabel.setText("");
                                    }
                                    catch(IOException e)
                                    {
                                        e.printStackTrace();
                                    }


                        }
                    }    
						
    }//GEN-LAST:event_sendbtnActionPerformed

    private void connecttobtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connecttobtnMouseEntered
        // TODO add your handling code here:
        //inter
        connecttobtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_connecttobtnMouseEntered

    private void createbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createbtnMouseEntered
        // TODO add your handling code here:
        createbtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_createbtnMouseEntered

    private void groupbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupbtnMouseEntered
        // TODO add your handling code here:
        groupbtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_groupbtnMouseEntered

    private void broadbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_broadbtnMouseEntered
        // TODO add your handling code here:
        broadbtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_broadbtnMouseEntered

    private void sendbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendbtnMouseEntered
        // TODO add your handling code here:
        sendbtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_sendbtnMouseEntered

    private void closebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebtnActionPerformed
            try {
                // TODO add your handling code here:
            f=0;
            if(mcs!=null)
                mcs.close();
            if(ms!=null)
                ms.close();
            if(bs!=null)
                bs.close();
            if(gs!=null)
                gs.close();
            } catch (Exception ex) {
                Logger.getLogger(MassengerWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        conlabel.setText("");
        msgtxtarea.setText("");
        sendbtn.setEnabled(false);
        lltxtp.setText("");
        rrtxtp.setText("");
    }//GEN-LAST:event_closebtnActionPerformed

    private void groupbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupbtnActionPerformed
        try{                                         
            // TODO add your handling code here:
            //gropserver
            int uniqueId = (int) System.currentTimeMillis();
           String commandName = ""; 
           ActionEvent event = new ActionEvent(this, uniqueId, commandName);
           closebtnActionPerformed(event);
            String pn=JOptionPane.showInputDialog(frame, new Label("Enter Port No."));
            int port=Integer.parseInt(pn);
            try{
                gs=new GroupServer(frame,port);
                f=1;
                conlabel.setText("<Server Listening... :"+port+" >");
                sendbtn.setEnabled(true);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(frame, new Label("Server Creation Failed"));
            }
            
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_groupbtnActionPerformed

    private void multibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multibtnActionPerformed
        // TODO add your handling code here:
           int uniqueId = (int) System.currentTimeMillis();
           String commandName = ""; 
           ActionEvent event = new ActionEvent(this, uniqueId, commandName);
           closebtnActionPerformed(event);
           
           MultiDial md= MultiDial.getInstance(frame,"Create Group ...");
           f=3;
           //mcs= new MultiCreate()
           
    }//GEN-LAST:event_multibtnActionPerformed

    private void multibtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multibtn2ActionPerformed
        // TODO add your handling code here:
           int uniqueId = (int) System.currentTimeMillis();
           String commandName = ""; 
           ActionEvent event = new ActionEvent(this, uniqueId, commandName);
           closebtnActionPerformed(event);
           
           MultiDial md= MultiDial.getInstance(frame,"Join Group ...");
           f=3;
    }//GEN-LAST:event_multibtn2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
           int uniqueId = (int) System.currentTimeMillis();
           String commandName = ""; 
           ActionEvent event = new ActionEvent(this, uniqueId, commandName);
           closebtnActionPerformed(event);
    }//GEN-LAST:event_formWindowClosing

    private void multibtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multibtnMouseEntered
        // TODO add your handling code here:
                multibtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_multibtnMouseEntered

    private void multibtn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multibtn2MouseEntered
        // TODO add your handling code here:
                 multibtn2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_multibtn2MouseEntered

    private void closebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseEntered
        // TODO add your handling code here:
                closebtn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_closebtnMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MassengerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MassengerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MassengerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MassengerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frame=new MassengerWindow();
                frame.setIconImage(Toolkit.getDefaultToolkit().getImage("H:\\NetBeans\\data\\iconimage.jpg"));
                frame.setTitle("ChatBox v1.0.0");
                frame.setVisible(true);
                name.start();
            }
        });
    }
    
    public static void showPop() {
		JOptionPane.showMessageDialog(frame, new Label("Connection Lost"));
	}
    
    public void setsendbtn(boolean f){
        sendbtn.setEnabled(f);
    }
    
    public void setconlabel(String t){
        String text=t;
        conlabel.setText(text);
    }
    
    public int getjPanel4wd(){
        return(jPanel4.getWidth());
    }
    
    public void lltxtpappend(String s1){
        if(s1.equals("null"+"\n")||s1.equals("\n")||s1.equals(" \n")||s1.contains("null")){}
        else
        lltxtp.append(s1);
    }
    
    public void rrtxtpappend(String s2){
        if(s2.equals("null"+"\n")||s2.equals("\n")||s2.equals(" \n")||s2.contains("null")){}
        else
        {    
            if(s2.contains(Username))
                s2=s2.replace(Username+":","");
            rrtxtp.append(s2);
        }
    }    
    public void setmsgtxtarea(String s2){
        msgtxtarea.setText(s2);
    }
    public void closebtnActionmethod(ActionEvent e)
    {
        closebtnActionPerformed(e);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton broadbtn;
    private javax.swing.JButton closebtn;
    private javax.swing.JLabel conlabel;
    private javax.swing.JButton connecttobtn;
    private javax.swing.JButton createbtn;
    private javax.swing.JButton groupbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea lltxtp;
    private javax.swing.JTextArea msgtxtarea;
    private javax.swing.JButton multibtn;
    private javax.swing.JButton multibtn2;
    private javax.swing.JTextArea rrtxtp;
    private javax.swing.JButton sendbtn;
    // End of variables declaration//GEN-END:variables

    
}
